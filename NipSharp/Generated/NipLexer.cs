//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ../Nip.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace NipSharp {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public partial class NipLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, FLAG=6, AFFIX=7, MAXQUANTITY=8, 
		TIER=9, MERCTIER=10, NUMBER=11, IDENTIFIER=12, EQ=13, NEQ=14, GT=15, GTE=16, 
		LT=17, LTE=18, AND=19, OR=20, MUL=21, DIV=22, ADD=23, SUB=24, WS=25, LINE_COMMENT=26, 
		BLOCK_COMMENT=27;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "DIGIT", "LETTER", "QUOTE", "FLAG", 
		"AFFIX", "MAXQUANTITY", "TIER", "MERCTIER", "NUMBER", "IDENTIFIER", "EQ", 
		"NEQ", "GT", "GTE", "LT", "LTE", "AND", "OR", "MUL", "DIV", "ADD", "SUB", 
		"WS", "LINE_COMMENT", "BLOCK_COMMENT"
	};


	public NipLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public NipLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "']'", "'('", "')'", "'#'", "'flag'", null, "'maxquantity'", 
		"'tier'", "'merctier'", null, null, "'=='", "'!='", "'>'", "'>='", "'<'", 
		"'<='", "'&&'", "'||'", "'*'", "'/'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, "FLAG", "AFFIX", "MAXQUANTITY", "TIER", 
		"MERCTIER", "NUMBER", "IDENTIFIER", "EQ", "NEQ", "GT", "GTE", "LT", "LTE", 
		"AND", "OR", "MUL", "DIV", "ADD", "SUB", "WS", "LINE_COMMENT", "BLOCK_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Nip.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static NipLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1D', '\xC8', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x5', '\v', '\x61', '\n', '\v', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x6', '\xF', '~', '\n', '\xF', 
		'\r', '\xF', '\xE', '\xF', '\x7F', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\a', '\x10', '\x86', '\n', '\x10', '\f', '\x10', 
		'\xE', '\x10', '\x89', '\v', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', 
		'\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x6', '\x1D', '\xAA', 
		'\n', '\x1D', '\r', '\x1D', '\xE', '\x1D', '\xAB', '\x3', '\x1D', '\x3', 
		'\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\a', 
		'\x1E', '\xB4', '\n', '\x1E', '\f', '\x1E', '\xE', '\x1E', '\xB7', '\v', 
		'\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', 
		'\x1F', '\x3', '\x1F', '\a', '\x1F', '\xBF', '\n', '\x1F', '\f', '\x1F', 
		'\xE', '\x1F', '\xC2', '\v', '\x1F', '\x3', '\x1F', '\x3', '\x1F', '\x3', 
		'\x1F', '\x3', '\x1F', '\x3', '\x1F', '\x3', '\xC0', '\x2', ' ', '\x3', 
		'\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\x2', 
		'\xF', '\x2', '\x11', '\x2', '\x13', '\b', '\x15', '\t', '\x17', '\n', 
		'\x19', '\v', '\x1B', '\f', '\x1D', '\r', '\x1F', '\xE', '!', '\xF', '#', 
		'\x10', '%', '\x11', '\'', '\x12', ')', '\x13', '+', '\x14', '-', '\x15', 
		'/', '\x16', '\x31', '\x17', '\x33', '\x18', '\x35', '\x19', '\x37', '\x1A', 
		'\x39', '\x1B', ';', '\x1C', '=', '\x1D', '\x3', '\x2', '\x6', '\x3', 
		'\x2', '\x32', ';', '\x3', '\x2', '\x63', '|', '\x5', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x2', 
		'\xCC', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', 
		'\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x3', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x41', '\x3', '\x2', '\x2', '\x2', '\a', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\t', '\x45', '\x3', '\x2', '\x2', '\x2', '\v', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\r', 'I', '\x3', '\x2', '\x2', '\x2', '\xF', 'K', 
		'\x3', '\x2', '\x2', '\x2', '\x11', 'M', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x15', '`', '\x3', '\x2', '\x2', '\x2', 
		'\x17', '\x62', '\x3', '\x2', '\x2', '\x2', '\x19', 'n', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', 's', '\x3', '\x2', '\x2', '\x2', '\x1D', '}', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', '\x81', '\x3', '\x2', '\x2', '\x2', '!', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '#', '\x8D', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x90', '\x3', '\x2', '\x2', '\x2', '\'', '\x92', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x95', '\x3', '\x2', '\x2', '\x2', '+', '\x97', '\x3', 
		'\x2', '\x2', '\x2', '-', '\x9A', '\x3', '\x2', '\x2', '\x2', '/', '\x9D', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\xA0', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\xA2', '\x3', '\x2', '\x2', '\x2', '\x35', '\xA4', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\xA6', '\x3', '\x2', '\x2', '\x2', '\x39', '\xA9', 
		'\x3', '\x2', '\x2', '\x2', ';', '\xAF', '\x3', '\x2', '\x2', '\x2', '=', 
		'\xBA', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', ']', '\x2', '\x2', 
		'@', '\x4', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', '_', '\x2', 
		'\x2', '\x42', '\x6', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', 
		'*', '\x2', '\x2', '\x44', '\b', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', 
		'\a', '+', '\x2', '\x2', '\x46', '\n', '\x3', '\x2', '\x2', '\x2', 'G', 
		'H', '\a', '%', '\x2', '\x2', 'H', '\f', '\x3', '\x2', '\x2', '\x2', 'I', 
		'J', '\t', '\x2', '\x2', '\x2', 'J', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'K', 'L', '\t', '\x3', '\x2', '\x2', 'L', '\x10', '\x3', '\x2', '\x2', 
		'\x2', 'M', 'N', '\a', ')', '\x2', '\x2', 'N', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'P', '\a', 'h', '\x2', '\x2', 'P', 'Q', '\a', 'n', '\x2', 
		'\x2', 'Q', 'R', '\a', '\x63', '\x2', '\x2', 'R', 'S', '\a', 'i', '\x2', 
		'\x2', 'S', '\x14', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\a', 'r', '\x2', 
		'\x2', 'U', 'V', '\a', 't', '\x2', '\x2', 'V', 'W', '\a', 'g', '\x2', 
		'\x2', 'W', 'X', '\a', 'h', '\x2', '\x2', 'X', 'Y', '\a', 'k', '\x2', 
		'\x2', 'Y', '\x61', '\a', 'z', '\x2', '\x2', 'Z', '[', '\a', 'u', '\x2', 
		'\x2', '[', '\\', '\a', 'w', '\x2', '\x2', '\\', ']', '\a', 'h', '\x2', 
		'\x2', ']', '^', '\a', 'h', '\x2', '\x2', '^', '_', '\a', 'k', '\x2', 
		'\x2', '_', '\x61', '\a', 'z', '\x2', '\x2', '`', 'T', '\x3', '\x2', '\x2', 
		'\x2', '`', 'Z', '\x3', '\x2', '\x2', '\x2', '\x61', '\x16', '\x3', '\x2', 
		'\x2', '\x2', '\x62', '\x63', '\a', 'o', '\x2', '\x2', '\x63', '\x64', 
		'\a', '\x63', '\x2', '\x2', '\x64', '\x65', '\a', 'z', '\x2', '\x2', '\x65', 
		'\x66', '\a', 's', '\x2', '\x2', '\x66', 'g', '\a', 'w', '\x2', '\x2', 
		'g', 'h', '\a', '\x63', '\x2', '\x2', 'h', 'i', '\a', 'p', '\x2', '\x2', 
		'i', 'j', '\a', 'v', '\x2', '\x2', 'j', 'k', '\a', 'k', '\x2', '\x2', 
		'k', 'l', '\a', 'v', '\x2', '\x2', 'l', 'm', '\a', '{', '\x2', '\x2', 
		'm', '\x18', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\a', 'v', '\x2', '\x2', 
		'o', 'p', '\a', 'k', '\x2', '\x2', 'p', 'q', '\a', 'g', '\x2', '\x2', 
		'q', 'r', '\a', 't', '\x2', '\x2', 'r', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		's', 't', '\a', 'o', '\x2', '\x2', 't', 'u', '\a', 'g', '\x2', '\x2', 
		'u', 'v', '\a', 't', '\x2', '\x2', 'v', 'w', '\a', '\x65', '\x2', '\x2', 
		'w', 'x', '\a', 'v', '\x2', '\x2', 'x', 'y', '\a', 'k', '\x2', '\x2', 
		'y', 'z', '\a', 'g', '\x2', '\x2', 'z', '{', '\a', 't', '\x2', '\x2', 
		'{', '\x1C', '\x3', '\x2', '\x2', '\x2', '|', '~', '\x5', '\r', '\a', 
		'\x2', '}', '|', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '}', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\x80', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '\x87', '\x5', '\xF', '\b', '\x2', '\x82', '\x86', '\x5', '\xF', 
		'\b', '\x2', '\x83', '\x86', '\x5', '\r', '\a', '\x2', '\x84', '\x86', 
		'\x5', '\x11', '\t', '\x2', '\x85', '\x82', '\x3', '\x2', '\x2', '\x2', 
		'\x85', '\x83', '\x3', '\x2', '\x2', '\x2', '\x85', '\x84', '\x3', '\x2', 
		'\x2', '\x2', '\x86', '\x89', '\x3', '\x2', '\x2', '\x2', '\x87', '\x85', 
		'\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', '\x2', 
		'\x88', ' ', '\x3', '\x2', '\x2', '\x2', '\x89', '\x87', '\x3', '\x2', 
		'\x2', '\x2', '\x8A', '\x8B', '\a', '?', '\x2', '\x2', '\x8B', '\x8C', 
		'\a', '?', '\x2', '\x2', '\x8C', '\"', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\a', '#', '\x2', '\x2', '\x8E', '\x8F', '\a', '?', '\x2', '\x2', 
		'\x8F', '$', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\a', '@', '\x2', 
		'\x2', '\x91', '&', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\a', 
		'@', '\x2', '\x2', '\x93', '\x94', '\a', '?', '\x2', '\x2', '\x94', '(', 
		'\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\a', '>', '\x2', '\x2', '\x96', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x97', '\x98', '\a', '>', '\x2', '\x2', 
		'\x98', '\x99', '\a', '?', '\x2', '\x2', '\x99', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9B', '\a', '(', '\x2', '\x2', '\x9B', '\x9C', '\a', 
		'(', '\x2', '\x2', '\x9C', '.', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', 
		'\a', '~', '\x2', '\x2', '\x9E', '\x9F', '\a', '~', '\x2', '\x2', '\x9F', 
		'\x30', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', '\a', ',', '\x2', 
		'\x2', '\xA1', '\x32', '\x3', '\x2', '\x2', '\x2', '\xA2', '\xA3', '\a', 
		'\x31', '\x2', '\x2', '\xA3', '\x34', '\x3', '\x2', '\x2', '\x2', '\xA4', 
		'\xA5', '\a', '-', '\x2', '\x2', '\xA5', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '\xA6', '\xA7', '\a', '/', '\x2', '\x2', '\xA7', '\x38', '\x3', 
		'\x2', '\x2', '\x2', '\xA8', '\xAA', '\t', '\x4', '\x2', '\x2', '\xA9', 
		'\xA8', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xAB', '\x3', '\x2', '\x2', 
		'\x2', '\xAB', '\xA9', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAC', '\x3', 
		'\x2', '\x2', '\x2', '\xAC', '\xAD', '\x3', '\x2', '\x2', '\x2', '\xAD', 
		'\xAE', '\b', '\x1D', '\x2', '\x2', '\xAE', ':', '\x3', '\x2', '\x2', 
		'\x2', '\xAF', '\xB0', '\a', '\x31', '\x2', '\x2', '\xB0', '\xB1', '\a', 
		'\x31', '\x2', '\x2', '\xB1', '\xB5', '\x3', '\x2', '\x2', '\x2', '\xB2', 
		'\xB4', '\n', '\x5', '\x2', '\x2', '\xB3', '\xB2', '\x3', '\x2', '\x2', 
		'\x2', '\xB4', '\xB7', '\x3', '\x2', '\x2', '\x2', '\xB5', '\xB3', '\x3', 
		'\x2', '\x2', '\x2', '\xB5', '\xB6', '\x3', '\x2', '\x2', '\x2', '\xB6', 
		'\xB8', '\x3', '\x2', '\x2', '\x2', '\xB7', '\xB5', '\x3', '\x2', '\x2', 
		'\x2', '\xB8', '\xB9', '\b', '\x1E', '\x2', '\x2', '\xB9', '<', '\x3', 
		'\x2', '\x2', '\x2', '\xBA', '\xBB', '\a', '\x31', '\x2', '\x2', '\xBB', 
		'\xBC', '\a', ',', '\x2', '\x2', '\xBC', '\xC0', '\x3', '\x2', '\x2', 
		'\x2', '\xBD', '\xBF', '\v', '\x2', '\x2', '\x2', '\xBE', '\xBD', '\x3', 
		'\x2', '\x2', '\x2', '\xBF', '\xC2', '\x3', '\x2', '\x2', '\x2', '\xC0', 
		'\xC1', '\x3', '\x2', '\x2', '\x2', '\xC0', '\xBE', '\x3', '\x2', '\x2', 
		'\x2', '\xC1', '\xC3', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC0', '\x3', 
		'\x2', '\x2', '\x2', '\xC3', '\xC4', '\a', ',', '\x2', '\x2', '\xC4', 
		'\xC5', '\a', '\x31', '\x2', '\x2', '\xC5', '\xC6', '\x3', '\x2', '\x2', 
		'\x2', '\xC6', '\xC7', '\b', '\x1F', '\x2', '\x2', '\xC7', '>', '\x3', 
		'\x2', '\x2', '\x2', '\n', '\x2', '`', '\x7F', '\x85', '\x87', '\xAB', 
		'\xB5', '\xC0', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace NipSharp
